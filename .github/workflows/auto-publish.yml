name: Auto Release and Publish to NPM

on:
  pull_request:
    types: [closed]
    branches: [main, master]
    paths:
      - 'template/**'
      - 'bin/**'
      - 'package.json'
      - 'README.md'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  id-token: write

jobs:
  release-and-publish:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci

      - name: Determine version bump
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION_TYPE="${{ github.event.inputs.version_type }}"
          else
            # Auto-determine version type based on commit messages
            if git log --oneline -1 | grep -i "breaking\|major"; then
              VERSION_TYPE="major"
            elif git log --oneline -1 | grep -i "feat\|feature\|minor"; then
              VERSION_TYPE="minor"
            else
              VERSION_TYPE="patch"
            fi
          fi
          echo "version_type=$VERSION_TYPE" >> $GITHUB_OUTPUT
          echo "Will bump $VERSION_TYPE version"

      - name: Bump version and create tag
        id: bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ steps.version.outputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")

          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git tag "v$NEW_VERSION"
          git push origin HEAD:${{ github.ref_name }}
          git push origin "v$NEW_VERSION"

      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          release_name: Release v${{ steps.bump.outputs.new_version }}
          body: |
            ## Release v${{ steps.bump.outputs.new_version }}

            ### Changes
            - Auto-published from PR merge
            - Previous version: v${{ steps.bump.outputs.old_version }}

            ### Installation
            ```bash
            npx create-nextjs-aptos-dapp-template
            ```

            ### What's Changed
            See the [commit history](https://github.com/${{ github.repository }}/compare/v${{ steps.bump.outputs.old_version }}...v${{ steps.bump.outputs.new_version }}) for details.
          draft: false
          prerelease: false
